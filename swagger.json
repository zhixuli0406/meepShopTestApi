{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1.0",
    "title": "MeepShop 聊天室 API 服務",
    "description": "聊天應用程式後端 API 服務，使用 Node.js、Koa.js、MongoDB 及 WebSockets 進行即時通訊。支援文字與圖片訊息 (圖片透過預簽名 URL 儲存於 AWS S3)。\n\n## WebSocket API\n\nWebSocket API 用於即時通訊，主要功能為向已連線的客戶端廣播新訊息。\n\n-   **伺服器 URL：** Socket.IO 伺服器與 HTTP 伺服器運行於相同埠號 (例如：`ws://localhost:3000` 或 `wss://yourdomain.com`)。\n\n### 事件\n\n#### 客戶端 -> 伺服器\n\n1.  **`joinConversation`**\n    -   **酬載 (Payload)：** `conversationId (字串)`\n    -   **描述：** 當使用者進入特定對話畫面時，由客戶端發送。伺服器會將客戶端的 socket 加入由 `conversationId` 標識的聊天室中。\n\n2.  **`leaveConversation`** (選填)\n    -   **酬載 (Payload)：** `conversationId (字串)`\n    -   **描述：** 當使用者離開特定對話畫面時，由客戶端發送。伺服器會將客戶端的 socket 從該聊天室中移除。\n\n#### 伺服器 -> 客戶端\n\n1.  **`newMessage`**\n    -   **酬載 (Payload)：** `訊息物件 (參見 POST /conversations/{conversationId}/messages 成功回應的 data 部分)`\n    -   **描述：** 當特定對話中成功建立新訊息時，由伺服器向該對話聊天室中的所有客戶端廣播。"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "本地開發伺服器"
    }
  ],
  "components": {
    "schemas": {
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "fail", "error"],
            "description": "指示回應的狀態。"
          },
          "message": {
            "type": "string",
            "description": "描述性訊息。"
          }
        },
        "required": ["status"]
      },
      "ErrorResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/StatusResponse" },
          {
            "type": "object",
            "properties": {
              "errorCode": {
                "type": "string",
                "description": "用於程式化錯誤處理的特定錯誤代碼。"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "description": "關於驗證錯誤或其他問題的詳細資訊。"
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "description": "使用者物件的結構。",
        "properties": {
          "_id": {
            "type": "string",
            "description": "使用者唯一識別碼 (MongoDB ObjectId)",
            "format": "objectid",
            "example": "60d0fe4f5311236168a109ca"
          },
          "username": {
            "type": "string",
            "description": "使用者名稱 (英數字元, 3-30 字元)",
            "example": "johndoe"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "使用者頭像的 URL",
            "example": "https://i.pravatar.cc/150?img=1"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "使用者建立時間戳記"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "description": "建立新使用者時的輸入結構。",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "使用者名稱 (英數字元, 3-30 字元)"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "使用者頭像的 URL (選填)"
          }
        }
      },
      "ConversationParticipant": {
          "type": "object",
          "properties": {
              "userId": {
                  "type": "string",
                  "format": "objectid",
                  "description": "Participant's user ID"
              },
              "user": {
                  "type": "string",
                  "description": "Participant's username"
              },
              "avatar": {
                  "type": "string",
                  "format": "uri",
                  "description": "Participant's avatar URL"
              }
          }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "objectid",
            "description": "Conversation unique identifier"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationParticipant"
            }
          },
          "lastMessage": {
            "oneOf": [
                {"type": "string", "format": "objectid", "description": "ID of the last message or null if no messages yet."},
                {"$ref": "#/components/schemas/Message"} 
            ],
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ConversationInput": {
        "type": "object",
        "required": [
          "participantIds"
        ],
        "properties": {
          "participantIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "objectid",
              "description": "MongoDB ObjectId of a user"
            },
            "minItems": 2,
            "description": "Array of participant user IDs (at least 2)."
          }
        }
      },
      "MessageSender": {
          "type": "object",
          "properties": {
              "userId": {
                  "type": "string",
                  "format": "objectid",
                  "description": "Sender's user ID"
              },
              "user": {
                  "type": "string",
                  "description": "Sender's username"
              },
              "avatar": {
                  "type": "string",
                  "format": "uri",
                  "description": "Sender's avatar URL"
              }
          }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": { 
            "type": "string",
            "format": "objectid",
            "description": "Message unique identifier"
          },
          "conversationId": {
            "type": "string",
            "format": "objectid",
            "description": "ID of the conversation this message belongs to"
          },
          "sender": {
            "$ref": "#/components/schemas/MessageSender"
          },
          "type": {
            "type": "string",
            "enum": ["text", "image", "system"],
            "description": "Type of the message"
          },
          "content": {
            "type": "string",
            "description": "Content of the message (text or URL for image)"
          },
          "s3Key": {
            "type": "string",
            "nullable": true,
            "description": "S3 object key if the message type is 'image'"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Unix milliseconds timestamp of when the message was created"
          }
        }
      },
      "MessageInput": {
        "type": "object",
        "required": [
          "senderId",
          "type",
          "content"
        ],
        "properties": {
          "senderId": {
            "type": "string",
            "format": "objectid",
            "description": "ID of the user sending the message"
          },
          "type": {
            "type": "string",
            "enum": ["text", "image"],
            "description": "Type of the message ('text' or 'image')"
          },
          "content": {
            "type": "string",
            "description": "Message content (text or S3 URL for image type)"
          },
          "s3Key": {
            "type": "string",
            "nullable": true,
            "description": "S3 object key (required for image type, null/omitted for text)"
          }
        }
      },
      "GenerateSignedUrlInput": {
        "type": "object",
        "required": ["filename", "contentType"],
        "properties": {
            "filename": {"type": "string", "description": "Original filename"},
            "contentType": {"type": "string", "description": "MIME type of the file"},
            "userId": {"type": "string", "nullable": true, "description": "Optional user ID for S3 path organization"},
            "conversationId": {"type": "string", "nullable": true, "description": "Optional conversation ID for S3 path organization"}
        }
      },
      "GeneratedSignedUrlData": {
          "type": "object",
          "properties": {
              "signedUrl": {"type": "string", "format": "uri", "description": "Presigned PUT URL for S3"},
              "objectKey": {"type": "string", "description": "The key (path) of the object in S3"},
              "fileUrl": {"type": "string", "format": "uri", "description": "The public URL of the file after upload"}
          }
      }
    }
  },
  "paths": {
    "/users": {
      "post": {
        "summary": "建立新使用者",
        "description": "建立一個新的使用者帳號。",
        "tags": ["使用者管理"],
        "requestBody": {
          "description": "要建立的使用者物件",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "使用者成功建立",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無效的輸入 (例如：驗證錯誤)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": "fail",
                      "message": "輸入驗證失敗。",
                      "errorCode": "VALIDATION_ERROR",
                      "details": [
                        { "field": "username", "message": "使用者名稱為必填欄位" }
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "使用者名稱已存在",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "usernameTaken": {
                    "value": {
                      "status": "fail",
                      "message": "使用者名稱已存在。",
                      "errorCode": "USERNAME_TAKEN"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations": {
      "get": {
        "summary": "取得所有對話列表",
        "description": "擷取目前所有的對話列表，依照最近更新時間排序。包含參與者詳細資訊和最後一則訊息。",
        "tags": ["對話管理"],
        "responses": {
          "200": {
            "description": "成功擷取對話列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Conversation"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "內部伺服器錯誤",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "建立新對話",
        "description": "在兩位或多位使用者之間建立一個新的對話。如果已存在具有完全相同參與者組合的對話，則返回現有的對話。",
        "tags": ["對話管理"],
        "requestBody": {
          "description": "新對話的參與者 ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "對話成功建立",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": { "$ref": "#/components/schemas/Conversation" }
                  }
                }
              }
            }
          },
          "200": {
            "description": "具有這些參與者的對話已存在",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "message": { "type": "string", "example": "具有這些參與者的對話已存在。" },
                    "data": { "$ref": "#/components/schemas/Conversation" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無效的輸入 (例如：驗證錯誤、參與者數量不足)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "validationError": {
                    "value": {
                      "status": "fail", "message": "輸入驗證失敗。", "errorCode": "VALIDATION_ERROR",
                      "details": [{ "field": "participantIds", "message": "participantIds 必須包含至少 2 個項目"}]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "一或多位參與者使用者未找到",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "userNotFound": {
                    "value": {
                      "status": "fail", "message": "找不到 ID 為 someUserId 的使用者", "errorCode": "USER_NOT_FOUND"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/{conversationId}/messages": {
      "get": {
        "summary": "取得特定對話的訊息",
        "description": "根據對話 ID 擷取該對話中的所有訊息，依照建立時間排序。",
        "tags": ["訊息管理"],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "description": "對話的 ID (MongoDB ObjectId)",
            "schema": {
              "type": "string",
              "format": "objectid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "成功擷取訊息列表",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無效的 conversationId 格式",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "找不到指定的對話",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "在特定對話中建立新訊息",
        "description": "在指定的對話中發送一則新的文字或圖片訊息。訊息隨後會透過 WebSockets 廣播給該對話聊天室中已連線的客戶端。",
        "tags": ["訊息管理"],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "description": "對話的 ID (MongoDB ObjectId)",
            "schema": {
              "type": "string",
              "format": "objectid"
            }
          }
        ],
        "requestBody": {
          "description": "要建立的訊息物件",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "訊息成功建立",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": { "$ref": "#/components/schemas/Message" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無效的輸入 (conversationId 或請求主體驗證錯誤)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "403": {
            "description": "發送者並非此對話的參與者",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "找不到指定的對話或發送者",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/uploads/generate-signed-url": {
      "post": {
        "summary": "產生 S3 預簽名上傳 URL",
        "description": "產生一個預簽名 URL，客戶端可以使用該 URL 將檔案（例如：圖片）直接上傳到 AWS S3。",
        "tags": ["檔案上傳"],
        "requestBody": {
          "description": "產生預簽名 URL 所需的檔案資訊",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSignedUrlInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "成功產生預簽名 URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "data": {
                      "$ref": "#/components/schemas/GeneratedSignedUrlData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "無效的輸入 (例如：缺少檔案名稱或內容類型)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "內部伺服器錯誤 (例如：S3 設定遺失或產生 URL 時發生錯誤)",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    }
  }
} 